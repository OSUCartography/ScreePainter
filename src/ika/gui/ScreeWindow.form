<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.5" maxVersion="1.7" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <NonVisualComponents>
    <Component class="javax.swing.ButtonGroup" name="toolBarButtonGroup">
    </Component>
    <Container class="javax.swing.JPopupMenu" name="viewPopupMenu">

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout">
        <Property name="useNullLayout" type="boolean" value="true"/>
      </Layout>
      <SubComponents>
        <MenuItem class="javax.swing.JCheckBoxMenuItem" name="viewScreeCheckBoxMenuItem">
          <Properties>
            <Property name="selected" type="boolean" value="true"/>
            <Property name="text" type="java.lang.String" value="Scree"/>
            <Property name="toolTipText" type="java.lang.String" value="Show or hide the generated scree dots."/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="viewScreeCheckBoxMenuItemActionPerformed"/>
          </Events>
        </MenuItem>
        <MenuItem class="javax.swing.JCheckBoxMenuItem" name="viewPolygonsCheckBoxMenuItem">
          <Properties>
            <Property name="text" type="java.lang.String" value="Scree Polygons"/>
            <Property name="toolTipText" type="java.lang.String" value="The polyongs to fill with scree."/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="viewPolygonsCheckBoxMenuItemActionPerformed"/>
          </Events>
        </MenuItem>
        <MenuItem class="javax.swing.JCheckBoxMenuItem" name="viewGullyLinesCheckBoxMenuItem">
          <Properties>
            <Property name="text" type="java.lang.String" value="Gully Lines"/>
            <Property name="toolTipText" type="java.lang.String" value="Gully lines symbolized by braids of stones."/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="viewGullyLinesCheckBoxMenuItemActionPerformed"/>
          </Events>
        </MenuItem>
        <Component class="javax.swing.JSeparator" name="jSeparator13">
        </Component>
        <MenuItem class="javax.swing.JCheckBoxMenuItem" name="viewNoneCheckBoxMenuItem">
          <Properties>
            <Property name="text" type="java.lang.String" value="&lt;No Background Image&gt;"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="viewNoneCheckBoxMenuItemActionPerformed"/>
          </Events>
        </MenuItem>
        <MenuItem class="javax.swing.JCheckBoxMenuItem" name="viewObstaclesCheckBoxMenuItem">
          <Properties>
            <Property name="selected" type="boolean" value="true"/>
            <Property name="text" type="java.lang.String" value="Obstacles Mask"/>
            <Property name="toolTipText" type="java.lang.String" value="Stones are not placed where this image is black."/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="viewObstaclesCheckBoxMenuItemActionPerformed"/>
          </Events>
        </MenuItem>
        <MenuItem class="javax.swing.JCheckBoxMenuItem" name="viewShadingCheckBoxMenuItem">
          <Properties>
            <Property name="text" type="java.lang.String" value="Shaded Relief"/>
            <Property name="toolTipText" type="java.lang.String" value="The size and density of stones varies with the brightness of this image."/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="viewShadingCheckBoxMenuItemActionPerformed"/>
          </Events>
        </MenuItem>
        <MenuItem class="javax.swing.JCheckBoxMenuItem" name="viewGradationMaskCheckBoxMenuItem">
          <Properties>
            <Property name="text" type="java.lang.String" value="Gradation Mask"/>
            <Property name="toolTipText" type="java.lang.String" value="An alternative gradation curve is applied where this image is dark."/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="viewGradationMaskCheckBoxMenuItemActionPerformed"/>
          </Events>
        </MenuItem>
        <MenuItem class="javax.swing.JCheckBoxMenuItem" name="viewLargeStonesMaskCheckBoxMenuItem">
          <Properties>
            <Property name="text" type="java.lang.String" value="Large Stones Mask"/>
            <Property name="toolTipText" type="java.lang.String" value="Stones are enlarged where this mask is dark."/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="viewLargeStonesMaskCheckBoxMenuItemActionPerformed"/>
          </Events>
        </MenuItem>
        <MenuItem class="javax.swing.JCheckBoxMenuItem" name="viewReferenceCheckBoxMenuItem">
          <Properties>
            <Property name="text" type="java.lang.String" value="Reference Image"/>
            <Property name="toolTipText" type="java.lang.String" value="This image is not used for scree generation."/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="viewReferenceCheckBoxMenuItemActionPerformed"/>
          </Events>
        </MenuItem>
      </SubComponents>
    </Container>
    <Menu class="javax.swing.JMenuBar" name="menuBar">
      <SubComponents>
        <Menu class="javax.swing.JMenu" name="fileMenu">
          <Properties>
            <Property name="text" type="java.lang.String" value="File"/>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="newMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="New"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="newMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="closeMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Close"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="closeMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JSeparator" name="jSeparator5">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="saveSettingsMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()&#xa;    | java.awt.event.InputEvent.SHIFT_MASK)" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Save Settings..."/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="saveSettingsMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="loadSettingsMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Load Settings&#x2026;"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="loadSettingsMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JSeparator" name="jSeparator1">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="exportScreeMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Export Scree&#x2026;"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="exportScreeMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="exportGullyLinesMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Export Gully Lines&#x2026;"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="exportGullyLinesMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator6">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="exportCommandLineArgumentsMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Export Command Line Arguments&#x2026;"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="exportCommandLineArgumentsMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JSeparator" name="exitMenuSeparator">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="exitMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Exit"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="exitMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="screeMenu">
          <Properties>
            <Property name="text" type="java.lang.String" value="Scree"/>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="loadInputDataMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Scree Input Data&#x2026;"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="loadInputDataMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JSeparator" name="jSeparator4">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="updateScreeMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Update Scree"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="updateScreeMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="generateScreeLinesMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Generate Gully Lines"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="generateScreeLinesMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="adjustUpdateAreaScreeMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Adjust Update Area to Visible Area"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="adjustUpdateAreaScreeMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JSeparator" name="jSeparator2">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="reportMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Show Report&#x2026;"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="reportMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="viewMenu">
          <Properties>
            <Property name="text" type="java.lang.String" value="View"/>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="zoomInMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ADD,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Zoom In"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="zoomInMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="zoomOutMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SUBTRACT,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Zoom Out"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="zoomOutMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JSeparator" name="jSeparator12">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="zoomOnUpdateAreaMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Zoom On Update Area"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="zoomOnUpdateAreaMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="showAllMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD0,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Show All"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="showAllMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JSeparator" name="jSeparator8">
            </MenuItem>
            <MenuItem class="javax.swing.JCheckBoxMenuItem" name="showPageCheckBoxMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Show Map Outline"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="showPageCheckBoxMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="toggleViewMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Toggle Reference Image and Obstacles Mask"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="toggleViewMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="windowMenu">
          <Properties>
            <Property name="text" type="java.lang.String" value="Window"/>
            <Property name="name" type="java.lang.String" value="WindowsMenu" noResource="true"/>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="minimizeMenuItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M,&#xa;    java.awt.Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())" type="code"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Minimize"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="minimizeMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="zoomMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Zoom"/>
                <Property name="enabled" type="boolean" value="false"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="zoomMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JSeparator" name="windowSeparator">
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="helpMenu">
          <Properties>
            <Property name="text" type="java.lang.String" value="?"/>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="winHelpMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Scree Painter Online Help"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="helpMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="infoMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Info"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="infoMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="macHelpMenu">
          <Properties>
            <Property name="text" type="java.lang.String" value="Help"/>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="macInfoMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Info"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="macInfoMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator3">
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_VariableLocal" type="java.lang.Boolean" value="true"/>
                <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="0"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="macHelpMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Scree Painter Online Help"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="helpMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
          </SubComponents>
        </Menu>
      </SubComponents>
    </Menu>
  </NonVisualComponents>
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="0"/>
    <Property name="name" type="java.lang.String" value="" noResource="true"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="menuBar" type="java.lang.String" value="menuBar"/>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <Events>
    <EventHandler event="windowClosing" listener="java.awt.event.WindowListener" parameters="java.awt.event.WindowEvent" handler="closeWindow"/>
  </Events>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="2"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,2,29,0,0,3,-42"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="leftPanel">
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
          <BorderConstraints direction="West"/>
        </Constraint>
      </Constraints>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignFlowLayout"/>
    </Container>
    <Container class="javax.swing.JPanel" name="rightPanel">
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
          <BorderConstraints direction="Center"/>
        </Constraint>
      </Constraints>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
      <SubComponents>
        <Container class="javax.swing.JToolBar" name="navigationToolBar">
          <Properties>
            <Property name="floatable" type="boolean" value="false"/>
            <Property name="rollover" type="boolean" value="true"/>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
              <BorderConstraints direction="North"/>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBoxLayout"/>
          <SubComponents>
            <Container class="javax.swing.JPanel" name="jPanel1">

              <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
              <SubComponents>
                <Container class="javax.swing.JPanel" name="jPanel4">
                  <Constraints>
                    <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
                      <BorderConstraints direction="West"/>
                    </Constraint>
                  </Constraints>

                  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout"/>
                  <SubComponents>
                    <Container class="javax.swing.JPanel" name="jPanel2">
                      <Constraints>
                        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout" value="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout$GridBagConstraintsDescription">
                          <GridBagConstraints gridX="-1" gridY="-1" gridWidth="1" gridHeight="1" fill="0" ipadX="0" ipadY="0" insetsTop="0" insetsLeft="0" insetsBottom="0" insetsRight="0" anchor="10" weightX="0.0" weightY="0.0"/>
                        </Constraint>
                      </Constraints>

                      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignFlowLayout"/>
                      <SubComponents>
                        <Component class="javax.swing.JToggleButton" name="arrowToggleButton">
                          <Properties>
                            <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                              <ComponentRef name="toolBarButtonGroup"/>
                            </Property>
                            <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                              <Image iconType="3" name="/ika/icons/Arrow16x16.gif"/>
                            </Property>
                            <Property name="selected" type="boolean" value="true"/>
                            <Property name="toolTipText" type="java.lang.String" value="Select, move and scale objects."/>
                            <Property name="horizontalTextPosition" type="int" value="0"/>
                            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                              <Dimension value="[24, 24]"/>
                            </Property>
                            <Property name="verticalTextPosition" type="int" value="3"/>
                          </Properties>
                          <Events>
                            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="arrowToggleButtonActionPerformed"/>
                          </Events>
                        </Component>
                        <Component class="javax.swing.JToggleButton" name="zoomInToggleButton">
                          <Properties>
                            <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                              <ComponentRef name="toolBarButtonGroup"/>
                            </Property>
                            <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                              <Image iconType="3" name="/ika/icons/ZoomIn16x16.gif"/>
                            </Property>
                            <Property name="toolTipText" type="java.lang.String" value="Zoom In"/>
                            <Property name="focusable" type="boolean" value="false"/>
                            <Property name="horizontalTextPosition" type="int" value="0"/>
                            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                              <Dimension value="[24, 24]"/>
                            </Property>
                            <Property name="verticalTextPosition" type="int" value="3"/>
                          </Properties>
                          <Events>
                            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="zoomInToggleButtonActionPerformed"/>
                          </Events>
                        </Component>
                        <Component class="javax.swing.JToggleButton" name="zoomOutToggleButton">
                          <Properties>
                            <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                              <ComponentRef name="toolBarButtonGroup"/>
                            </Property>
                            <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                              <Image iconType="3" name="/ika/icons/ZoomOut16x16.gif"/>
                            </Property>
                            <Property name="toolTipText" type="java.lang.String" value="Zoom Out"/>
                            <Property name="focusable" type="boolean" value="false"/>
                            <Property name="horizontalTextPosition" type="int" value="0"/>
                            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                              <Dimension value="[24, 24]"/>
                            </Property>
                            <Property name="verticalTextPosition" type="int" value="3"/>
                          </Properties>
                          <Events>
                            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="zoomOutToggleButtonActionPerformed"/>
                          </Events>
                        </Component>
                        <Component class="javax.swing.JToggleButton" name="handToggleButton">
                          <Properties>
                            <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                              <ComponentRef name="toolBarButtonGroup"/>
                            </Property>
                            <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                              <Image iconType="3" name="/ika/icons/Hand16x16.gif"/>
                            </Property>
                            <Property name="toolTipText" type="java.lang.String" value="Pan"/>
                            <Property name="focusable" type="boolean" value="false"/>
                            <Property name="horizontalTextPosition" type="int" value="0"/>
                            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                              <Dimension value="[24, 24]"/>
                            </Property>
                            <Property name="verticalTextPosition" type="int" value="3"/>
                          </Properties>
                          <Events>
                            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="handToggleButtonActionPerformed"/>
                          </Events>
                        </Component>
                        <Component class="javax.swing.JToggleButton" name="distanceToggleButton">
                          <Properties>
                            <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                              <ComponentRef name="toolBarButtonGroup"/>
                            </Property>
                            <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                              <Image iconType="3" name="/ika/icons/Ruler16x16.gif"/>
                            </Property>
                            <Property name="toolTipText" type="java.lang.String" value="Measure Distance and Angle"/>
                            <Property name="focusable" type="boolean" value="false"/>
                            <Property name="horizontalTextPosition" type="int" value="0"/>
                            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                              <Dimension value="[24, 24]"/>
                            </Property>
                            <Property name="verticalTextPosition" type="int" value="3"/>
                          </Properties>
                          <Events>
                            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="distanceToggleButtonActionPerformed"/>
                          </Events>
                        </Component>
                        <Component class="javax.swing.JButton" name="showAllButton">
                          <Properties>
                            <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                              <Image iconType="3" name="/ika/icons/ShowAll20x14.png"/>
                            </Property>
                            <Property name="toolTipText" type="java.lang.String" value="Show All"/>
                            <Property name="borderPainted" type="boolean" value="false"/>
                            <Property name="contentAreaFilled" type="boolean" value="false"/>
                            <Property name="focusable" type="boolean" value="false"/>
                            <Property name="horizontalTextPosition" type="int" value="0"/>
                            <Property name="verticalTextPosition" type="int" value="3"/>
                          </Properties>
                          <Events>
                            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="showAllButtonActionPerformed"/>
                          </Events>
                        </Component>
                      </SubComponents>
                    </Container>
                  </SubComponents>
                </Container>
                <Container class="javax.swing.JPanel" name="jPanel3">
                  <Constraints>
                    <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
                      <BorderConstraints direction="Center"/>
                    </Constraint>
                  </Constraints>

                  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignFlowLayout">
                    <Property name="verticalGap" type="int" value="0"/>
                  </Layout>
                  <SubComponents>
                    <Component class="javax.swing.JButton" name="updateButton">
                      <Properties>
                        <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                          <Image iconType="3" name="/ika/icons/update2.png"/>
                        </Property>
                        <Property name="text" type="java.lang.String" value="Update"/>
                        <Property name="toolTipText" type="java.lang.String" value="Generate scree stones."/>
                        <Property name="borderPainted" type="boolean" value="false"/>
                        <Property name="contentAreaFilled" type="boolean" value="false"/>
                        <Property name="horizontalTextPosition" type="int" value="0"/>
                        <Property name="verticalTextPosition" type="int" value="3"/>
                      </Properties>
                      <Events>
                        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="updateButtonActionPerformed"/>
                      </Events>
                    </Component>
                    <Component class="javax.swing.JToggleButton" name="areaToggleButton">
                      <Properties>
                        <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                          <Image iconType="3" name="/ika/icons/redbox.png"/>
                        </Property>
                        <Property name="text" type="java.lang.String" value="Update Area"/>
                        <Property name="borderPainted" type="boolean" value="false"/>
                        <Property name="componentPopupMenu" type="javax.swing.JPopupMenu" editor="org.netbeans.modules.form.ComponentChooserEditor">
                          <ComponentRef name="viewPopupMenu"/>
                        </Property>
                        <Property name="contentAreaFilled" type="boolean" value="false"/>
                        <Property name="horizontalAlignment" type="int" value="2"/>
                        <Property name="horizontalTextPosition" type="int" value="0"/>
                        <Property name="selectedIcon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                          <Image iconType="3" name="/ika/icons/showall.png"/>
                        </Property>
                        <Property name="verticalTextPosition" type="int" value="3"/>
                      </Properties>
                      <Events>
                        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="areaToggleButtonActionPerformed"/>
                      </Events>
                    </Component>
                    <Component class="javax.swing.JButton" name="dataButton">
                      <Properties>
                        <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                          <Image iconType="3" name="/ika/icons/file.png"/>
                        </Property>
                        <Property name="text" type="java.lang.String" value="Data"/>
                        <Property name="toolTipText" type="java.lang.String" value="Select the input data."/>
                        <Property name="borderPainted" type="boolean" value="false"/>
                        <Property name="contentAreaFilled" type="boolean" value="false"/>
                        <Property name="horizontalTextPosition" type="int" value="0"/>
                        <Property name="verticalTextPosition" type="int" value="3"/>
                      </Properties>
                      <Events>
                        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="dataButtonActionPerformed"/>
                      </Events>
                    </Component>
                    <Component class="ika.gui.MenuToggleButton" name="viewMenuButton">
                      <Properties>
                        <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                          <Image iconType="3" name="/ika/icons/view.png"/>
                        </Property>
                        <Property name="text" type="java.lang.String" value="View"/>
                        <Property name="toolTipText" type="java.lang.String" value="Select the information layers displayed in the map."/>
                        <Property name="borderPainted" type="boolean" value="false"/>
                        <Property name="contentAreaFilled" type="boolean" value="false"/>
                        <Property name="horizontalTextPosition" type="int" value="0"/>
                        <Property name="verticalTextPosition" type="int" value="3"/>
                      </Properties>
                      <AuxValues>
                        <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="viewMenuButton.setPopupMenu(viewPopupMenu);"/>
                      </AuxValues>
                    </Component>
                  </SubComponents>
                </Container>
                <Container class="javax.swing.JPanel" name="infoPanel">
                  <Constraints>
                    <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
                      <BorderConstraints direction="East"/>
                    </Constraint>
                  </Constraints>

                  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout"/>
                  <SubComponents>
                    <Component class="ika.gui.ScaleLabel" name="scaleLabel">
                      <Properties>
                        <Property name="maximumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                          <Dimension value="[150, 12]"/>
                        </Property>
                        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                          <Dimension value="[50, 20]"/>
                        </Property>
                        <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                          <Dimension value="[80, 12]"/>
                        </Property>
                      </Properties>
                      <Constraints>
                        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout" value="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout$GridBagConstraintsDescription">
                          <GridBagConstraints gridX="1" gridY="0" gridWidth="1" gridHeight="1" fill="0" ipadX="0" ipadY="0" insetsTop="0" insetsLeft="0" insetsBottom="0" insetsRight="0" anchor="11" weightX="0.0" weightY="0.0"/>
                        </Constraint>
                      </Constraints>
                    </Component>
                    <Component class="ika.gui.CoordinateInfoPanel" name="coordinateInfoPanel">
                      <Constraints>
                        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout" value="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout$GridBagConstraintsDescription">
                          <GridBagConstraints gridX="0" gridY="0" gridWidth="1" gridHeight="2" fill="0" ipadX="0" ipadY="0" insetsTop="0" insetsLeft="0" insetsBottom="0" insetsRight="0" anchor="11" weightX="0.0" weightY="0.0"/>
                        </Constraint>
                      </Constraints>
                    </Component>
                    <Component class="ika.gui.ScaleLabel" name="slopeLabel">
                      <Properties>
                        <Property name="maximumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                          <Dimension value="[150, 12]"/>
                        </Property>
                        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                          <Dimension value="[50, 20]"/>
                        </Property>
                        <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                          <Dimension value="[80, 12]"/>
                        </Property>
                      </Properties>
                      <Constraints>
                        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout" value="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout$GridBagConstraintsDescription">
                          <GridBagConstraints gridX="1" gridY="1" gridWidth="1" gridHeight="1" fill="0" ipadX="0" ipadY="0" insetsTop="0" insetsLeft="0" insetsBottom="0" insetsRight="0" anchor="11" weightX="0.0" weightY="0.0"/>
                        </Constraint>
                      </Constraints>
                    </Component>
                  </SubComponents>
                </Container>
              </SubComponents>
            </Container>
          </SubComponents>
        </Container>
        <Container class="ika.gui.MapComponent" name="mapComponent">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="ff" red="ff" type="rgb"/>
            </Property>
            <Property name="infoString" type="java.lang.String" value=""/>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[100, 200]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[200, 200]"/>
            </Property>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
              <BorderConstraints direction="Center"/>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout">
            <Property name="useNullLayout" type="boolean" value="true"/>
          </Layout>
        </Container>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
